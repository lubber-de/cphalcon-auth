ARG_ENABLE("phalcon_auth", "enable phalcon_auth", "no");

if (PHP_PHALCON_AUTH != "no") {
  EXTENSION("phalcon_auth", "phalcon_auth.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c math.c concat.c variables.c filter.c iterator.c exit.c time.c", "phalcon_auth");
  /* PCRE is always included on WIN32 */
  AC_DEFINE("ZEPHIR_USE_PHP_PCRE", 1, "Whether PHP pcre extension is present at compile time");
  if (PHP_JSON != "no") {
    ADD_EXTENSION_DEP("phalcon_auth", "json");
    AC_DEFINE("ZEPHIR_USE_PHP_JSON", 1, "Whether PHP json extension is present at compile time");
  }
  
  ADD_SOURCES(configure_module_dirname + "/phalcon/auth/adapter", "adapterinterface.zep.c abstractadapter.zep.c adapterwithremembertokeninterface.zep.c memory.zep.c model.zep.c stream.zep.c", "phalcon_auth");
	ADD_SOURCES(configure_module_dirname + "/phalcon/auth/access", "accessinterface.zep.c abstractaccess.zep.c authenticatesrequestinterface.zep.c auth.zep.c authenticate.zep.c guest.zep.c", "phalcon_auth");
	ADD_SOURCES(configure_module_dirname + "/phalcon/auth/guard", "guardinterface.zep.c basicauthinterface.zep.c guardstatefulinterface.zep.c session.zep.c token.zep.c userremember.zep.c", "phalcon_auth");
	ADD_SOURCES(configure_module_dirname + "/phalcon/auth", "managerinterface.zep.c manager.zep.c authenticatableinterface.zep.c exception.zep.c managerfactory.zep.c remembertokeninterface.zep.c rememberinginterface.zep.c", "phalcon_auth");
  ADD_FLAG("CFLAGS_PHALCON_AUTH", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("CFLAGS", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("LDFLAGS", "/LTCG");
}
